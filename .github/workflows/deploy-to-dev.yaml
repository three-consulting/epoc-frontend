name: Dev

on:
  push:
    branches:
      - dev
  workflow_dispatch:

env:
  PROJECT_ID: epoc-auth-dev-361109
  REPOSITORY: epoc-dev-container-repository
  SERVICE: epoc-frontend-dev
  REGION: europe-north1
  NGINX_SERVER_NAME: epoc-frontend-dev-ka3fwwycka-lz.a.run.app


jobs:
  tsc-and-format:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: "16"

      - name: Install dependencies and run checks
        run: |
          yarn install
          yarn run type-check
          yarn prettier --check .
          yarn eslint .
          yarn validate-types-dev

  deploy_to_dev:
    needs: tsc-and-format
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create nginx conf file
        run: envsubst '$NGINX_SERVER_NAME' < nginx.conf.tmpl > nginx.conf

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS_DEV }}
          token_format: 'access_token'

      - name: Define image meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}
          tags: |
            type=raw,value=${{ github.sha }}
          labels: |
            org.opencontainers.image.authors=epoc
            org.opencontainers.image.vendor=three.consulting
          flavor: |
            latest=true

      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v3'
        with:
          registry: '${{ env.REGION }}-docker.pkg.dev'
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
      
      -  name: Set up Docker Buildx
         uses: docker/setup-buildx-action@v3

      - name: Build and push image to artifact registry
        uses: docker/build-push-action@v5
        with:
          build-args: |
            NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY_DEV }}
            NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN_DEV }}
            NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL_DEV }}
            NEXT_PUBLIC_GOOGLE_APIKEY=${{ secrets.NEXT_PUBLIC_GOOGLE_APIKEY_DEV }}
          context: .
          file: Dockerfile
          no-cache: false
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}